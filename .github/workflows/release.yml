name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build Binaries
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux builds
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            artifact_name: treb_${{ github.ref_name }}_linux_amd64.tar.gz
          - os: ubuntu-latest
            goos: linux
            goarch: arm64
            artifact_name: treb_${{ github.ref_name }}_linux_arm64.tar.gz
          
          # macOS builds
          - os: macos-latest
            goos: darwin
            goarch: amd64
            artifact_name: treb_${{ github.ref_name }}_darwin_amd64.tar.gz
          - os: macos-latest
            goos: darwin
            goarch: arm64
            artifact_name: treb_${{ github.ref_name }}_darwin_arm64.tar.gz
          
          # Windows builds
          - os: windows-latest
            goos: windows
            goarch: amd64
            binary_suffix: .exe
            artifact_name: treb_${{ github.ref_name }}_windows_amd64.zip
          - os: windows-latest
            goos: windows
            goarch: arm64
            binary_suffix: .exe
            artifact_name: treb_${{ github.ref_name }}_windows_arm64.zip

    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      
      - name: Install abigen
        run: |
          go install github.com/ethereum/go-ethereum/cmd/abigen@latest
      
      - name: Install jq (Linux)
        if: matrix.goos == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
      
      - name: Install jq (macOS)
        if: matrix.goos == 'darwin'
        run: |
          brew install jq
      
      - name: Install jq (Windows)
        if: matrix.goos == 'windows'
        run: |
          choco install jq
      
      - name: Generate ABI bindings
        run: |
          make bindings
      
      - name: Get version info
        id: version
        shell: bash
        run: |
          if [[ ${{ github.ref_type }} == "tag" ]]; then
            echo "version=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            echo "version=nightly-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          fi
          echo "commit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT
      
      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        shell: bash
        run: |
          go build \
            -ldflags="-s -w -X main.version=${{ steps.version.outputs.version }} -X main.commit=${{ steps.version.outputs.commit }} -X main.date=${{ steps.version.outputs.date }}" \
            -o treb${{ matrix.binary_suffix }} \
            ./cli
      
      - name: Create archive (Unix)
        if: matrix.goos != 'windows'
        run: |
          tar czf ${{ matrix.artifact_name }} treb
      
      - name: Create archive (Windows)
        if: matrix.goos == 'windows'
        run: |
          7z a ${{ matrix.artifact_name }} treb.exe
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}
          retention-days: 1

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      
      - name: Generate checksums
        run: |
          if command -v sha256sum >/dev/null 2>&1; then
            sha256sum treb_*.{tar.gz,zip} > checksums.txt
          else
            shasum -a 256 treb_*.{tar.gz,zip} > checksums.txt
          fi
          cat checksums.txt
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            treb_*.tar.gz
            treb_*.zip
            checksums.txt
          draft: false
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
          generate_release_notes: true
          body: |
            ## Installation
            
            ### Quick install with trebup
            ```bash
            curl -fsSL https://raw.githubusercontent.com/trebuchet-org/treb-cli/main/trebup/install | bash
            trebup install ${{ github.ref_name }}
            ```
            
            ### Manual installation
            Download the appropriate binary for your platform from the assets below.
            
            ### Checksums
            Verify downloads with the checksums.txt file.
            
            ## What's Changed
            See the release notes generated from commit messages below.

  update-stable:
    name: Update Stable Release
    needs: release
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' && !contains(github.ref_name, 'alpha') && !contains(github.ref_name, 'beta') && !contains(github.ref_name, 'rc')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      
      - name: Update or create stable release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: stable
          name: Stable Release
          files: |
            treb_*.tar.gz
            treb_*.zip
            checksums.txt
          draft: false
          prerelease: false
          body: |
            # Stable Release
            
            This release always points to the latest stable version of treb.
            
            **Current stable version:** ${{ github.ref_name }}
            
            ## Installation
            
            ### Quick install with trebup
            ```bash
            curl -fsSL https://raw.githubusercontent.com/trebuchet-org/treb-cli/main/trebup/install | bash
            trebup install stable
            ```
            
            ### Manual installation
            Download the appropriate binary for your platform from the assets below.

  nightly:
    name: Nightly Build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
    
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux builds
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          
          # macOS builds  
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          
          # Windows builds
          - goos: windows
            goarch: amd64
            binary_suffix: .exe
          - goos: windows
            goarch: arm64
            binary_suffix: .exe
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      
      - name: Get version info
        id: version
        run: |
          echo "version=nightly-$(date +%Y%m%d)" >> $GITHUB_OUTPUT
          echo "commit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT
      
      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          go build \
            -ldflags="-s -w -X main.version=${{ steps.version.outputs.version }} -X main.commit=${{ steps.version.outputs.commit }} -X main.date=${{ steps.version.outputs.date }}" \
            -o treb${{ matrix.binary_suffix }} \
            ./cli
      
      - name: Create archive
        run: |
          if [[ "${{ matrix.goos }}" == "windows" ]]; then
            7z a treb_nightly_${{ matrix.goos }}_${{ matrix.goarch }}.zip treb.exe
          else
            tar czf treb_nightly_${{ matrix.goos }}_${{ matrix.goarch }}.tar.gz treb
          fi
      
      - name: Upload to nightly release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: nightly
          name: Nightly Build
          files: treb_nightly_*
          draft: false
          prerelease: true
          body: |
            # Nightly Build
            
            **Build Date:** ${{ steps.version.outputs.date }}
            **Commit:** ${{ steps.version.outputs.commit }}
            
            This is an automated nightly build from the main branch.
            
            ## Installation
            
            ### Quick install with trebup
            ```bash
            curl -fsSL https://raw.githubusercontent.com/trebuchet-org/treb-cli/main/trebup/install | bash
            trebup install nightly
            ```