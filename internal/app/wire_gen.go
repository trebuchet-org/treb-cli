// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/spf13/viper"
	"github.com/trebuchet-org/treb-cli/internal/adapters/fs"
	"github.com/trebuchet-org/treb-cli/internal/config"
	"github.com/trebuchet-org/treb-cli/internal/usecase"
)

// Injectors from wire.go:

// InitApp creates a fully wired App instance with viper configuration
func InitApp(v *viper.Viper, sink usecase.ProgressSink) (*App, error) {
	runtimeConfig, err := config.Provider(v)
	if err != nil {
		return nil, err
	}
	registryStoreAdapter, err := fs.NewRegistryStoreAdapter(runtimeConfig)
	if err != nil {
		return nil, err
	}
	listDeployments := usecase.NewListDeployments(runtimeConfig, registryStoreAdapter, sink)
	showDeployment := usecase.NewShowDeployment(runtimeConfig, registryStoreAdapter, sink)
	app, err := NewApp(runtimeConfig, listDeployments, showDeployment)
	if err != nil {
		return nil, err
	}
	return app, nil
}
